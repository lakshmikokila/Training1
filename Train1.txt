import java.util.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

class Thread1 extends Thread {
	
	FileWriter fw;
	BufferedWriter bw;
	HashSet<String> trainList=new HashSet<String>();	
	static int totalTrainInStation;    
	
	public Thread1(String str)  // constructor : Initialize train name objects. 
	{  
		super(str);
	}
 
public void run() {
	
	// Train Running from one position to another position		
	
	for (int k = 0; k < 5; k++) 
	{
			System.out.println("Train Name: " + getName());
			try 
			{
				System.out.println("Active Count = "+(activeCount()-1));
				if((activeCount()-1)>4)
				wait();
					
				sleep(500);
			}
			catch (InterruptedException e) 
			{
				System.out.println("Interrupped Exception "+e.toString());
	   	    }
	}
	
try
{
	System.out.println("Test Finished for: " + getName());
     // Which Train Reached at Station
	
	fw=new FileWriter("Timing.txt");
		 
		 bw=new BufferedWriter(fw);
		bw.write("Train Name: "+ getName() + " Arraive Time: " + System.nanoTime());		
		bw.flush();
		bw.close();
	}
catch (IOException e) 
{
		// TODO Auto-generated catch block
		System.out.println("Error "+e.toString());
		e.printStackTrace();
	}


	
	System.out.println("\n Total No. of Train(s) arrived in Station:"+ ++totalTrainInStation);
		
	trainList.add(getName());  // Reached Train in station stored to collection(hashset) 
		
	 Iterator <String> trainName = trainList.iterator();
     while (trainName.hasNext())
     System.out.println(trainName.next());
     
     
  }
}

public class Train1 {

			public static void main(String args[]) throws InterruptedException 
			{
				Thread1 ts1= new Thread1("Train1");
				Thread1 ts2= new Thread1("Train2");
				Thread1 ts3= new Thread1("Train3");
				Thread1 ts4= new Thread1("Train4");
				Thread1 ts5= new Thread1("Train5");
				
				ts1.start();
				ts2.start();
				ts3.start();
				ts4.start();
				
				ts4.join();
				ts5.start();
			}
}
		 
		